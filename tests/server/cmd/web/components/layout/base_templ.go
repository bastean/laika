// Code generated by templ - DO NOT EDIT.

// templ: version: v0.2.543
package layout

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import "context"
import "io"
import "bytes"
import "strings"

func email() templ.CSSClass {
	var templ_7745c5c3_CSSBuilder strings.Builder
	templ_7745c5c3_CSSBuilder.WriteString(`display:none;`)
	templ_7745c5c3_CSSID := templ.CSSID(`email`, templ_7745c5c3_CSSBuilder.String())
	return templ.ComponentCSSClass{
		ID:    templ_7745c5c3_CSSID,
		Class: templ.SafeCSS(`.` + templ_7745c5c3_CSSID + `{` + templ_7745c5c3_CSSBuilder.String() + `}`),
	}
}

func write() templ.ComponentScript {
	return templ.ComponentScript{
		Name: `__templ_write_5bbd`,
		Function: `function __templ_write_5bbd(){document.write('e'+'m'+'a'+'i'+'l'+'@'+'e'+'x'+'a'+'m'+'p'+'l'+'e'+'.'+'c'+'o'+'m');
}`,
		Call:       templ.SafeScript(`__templ_write_5bbd`),
		CallInline: templ.SafeScriptInline(`__templ_write_5bbd`),
	}
}

func writeHref() templ.ComponentScript {
	return templ.ComponentScript{
		Name: `__templ_writeHref_2d97`,
		Function: `function __templ_writeHref_2d97(){document.write('<a href="mailto:'+'e'+'m'+'a'+'i'+'l'+'@'+'e'+'x'+'a'+'m'+'p'+'l'+'e'+'.'+'c'+'o'+'m'+'">email</a>');
}`,
		Call:       templ.SafeScript(`__templ_writeHref_2d97`),
		CallInline: templ.SafeScriptInline(`__templ_writeHref_2d97`),
	}
}

func Base(title string, content templ.Component) templ.Component {
	return templ.ComponentFunc(func(ctx context.Context, templ_7745c5c3_W io.Writer) (templ_7745c5c3_Err error) {
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templ_7745c5c3_W.(*bytes.Buffer)
		if !templ_7745c5c3_IsBuffer {
			templ_7745c5c3_Buffer = templ.GetBuffer()
			defer templ.ReleaseBuffer(templ_7745c5c3_Buffer)
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<!doctype html><html lang=\"en\"><head><meta charset=\"UTF-8\"><meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"><meta name=\"description\" content=\"laika\"><meta name=\"keywords\" content=\"laika\"><meta name=\"theme-color\" content=\"#232627\"><meta name=\"apple-mobile-web-app-capable\" content=\"yes\"><meta name=\"apple-mobile-web-app-status-bar-style\" content=\"black-translucent\"><!-- Remove \"meta robots\" and \"robots.txt\" rules for SEO --><meta name=\"robots\" content=\"noindex, nofollow, noarchive, nositelinkssearchbox, nosnippet, notranslate, noimageindex\"><!-- Dependencies/Start --><!-- HTMX --><script src=\"https://unpkg.com/htmx.org@1.9.10\" integrity=\"sha384-D1Kt99CQMDuVetoL1lrYwg5t+9QdHe7NLX/SoJYkXDFfX37iInKRy5xLSi8nO7UC\" crossorigin=\"anonymous\"></script><!-- Tailwind/Extensions --><link href=\"https://cdn.jsdelivr.net/npm/daisyui@4.4.24/dist/full.min.css\" rel=\"stylesheet\" type=\"text/css\"><!-- Tailwind --><script src=\"https://cdn.tailwindcss.com\"></script><!-- Dependencies/End --><link rel=\"manifest\" href=\"/public/static/manifest.json\"><link rel=\"apple-touch-icon\" href=\"/public/static/assets/apple-touch-icon.png\"><link rel=\"icon\" href=\"/public/static/assets/favicon.png\"><title>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		var templ_7745c5c3_Var2 string
		templ_7745c5c3_Var2, templ_7745c5c3_Err = templ.JoinStringErrs(title)
		if templ_7745c5c3_Err != nil {
			return templ.Error{Err: templ_7745c5c3_Err, FileName: `tests/server/cmd/web/components/layout/base.templ`, Line: 51, Col: 17}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var2))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("</title></head><body><div class=\"w-full overflow-y-auto overflow-x-hidden\"><div id=\"main\" class=\"container mx-auto p-10 flex flex-col\"><div class=\"flex flex-col gap-3 w-full items-center\"><div class=\"flex flex-col gap-3 w-full border-opacity-50 items-center\"><div class=\"divider\"><span class=\"badge badge-primary font-semibold\">Plain text</span></div><div class=\"divider\"><span class=\"badge badge-info\">No protection</span></div><span class=\"badge badge-neutral\">email@example.com</span><div class=\"divider\"><span class=\"badge badge-info\">HTML Entities</span></div><span class=\"badge badge-neutral\">&#101;&#109;&#97;&#105;&#108;&#64;&#101;&#120;&#97;&#109;&#112;&#108;&#101;&#46;&#99;&#111;&#109;</span><div class=\"divider\"><span class=\"badge badge-info\">HTML Comments</span></div><span class=\"badge badge-neutral\">email@example<!--.example-->.com</span><div class=\"divider\"><span class=\"badge badge-info\">CSS Display none</span></div><span class=\"badge badge-neutral\">email@example")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		var templ_7745c5c3_Var3 = []any{email()}
		templ_7745c5c3_Err = templ.RenderCSSItems(ctx, templ_7745c5c3_Buffer, templ_7745c5c3_Var3...)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<b class=\"")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ.CSSClasses(templ_7745c5c3_Var3).String()))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("\">.example</b>.com</span><div class=\"divider\"><span class=\"badge badge-info\">JS Concatenation</span></div><span class=\"badge badge-neutral\">")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = write().Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("</span><div class=\"divider\"><span class=\"badge badge-info\">HTML Symbol substitution</span></div><span class=\"badge badge-neutral\">email AT example DOT com</span> <span class=\"badge badge-neutral\">email [at] example [dot] com</span> <span class=\"badge badge-neutral\">email(at)example(.)com</span><div class=\"divider\"><span class=\"badge badge-primary font-semibold\">Clickable link</span></div><div class=\"divider\"><span class=\"badge badge-info\">No protection</span></div><span class=\"badge badge-neutral\"><a href=\"mailto:email@example.com\">email</a></span><div class=\"divider\"><span class=\"badge badge-info\">HTML entities</span></div><span class=\"badge badge-neutral\"><a href=\"\">TODO</a></span><div class=\"divider\"><span class=\"badge badge-info\">URL encoding</span></div><span class=\"badge badge-neutral\"><a href=\"mailto:%65%6d%61%69%6c%40%65%78%61%6d%70%6c%65%2e%63%6f%6d\">email</a></span><div class=\"divider\"><span class=\"badge badge-info\">Concatenation JS</span></div><span class=\"badge badge-neutral\">")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = writeHref().Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("</span><div class=\"divider\"></div>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = content.Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("</div></div></div></div></body></html>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		if !templ_7745c5c3_IsBuffer {
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteTo(templ_7745c5c3_W)
		}
		return templ_7745c5c3_Err
	})
}
